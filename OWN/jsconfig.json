{
  // FRONTEND
  "compilerOptions": {
    // NOTE 루트폴더를 @로 지정
    "paths": {
      "@/*": ["./*"]
    },
    // NOTE ESNext: ECMAScript의 최신 버전을 지정
    "target": "ESNext",
    "module": "ESNext",
    // NOTE bundler에 최적화된 모듈 해석 방식을 지정. esbuild, webpack 등등
    "moduleResolution": "bundler",
    // NOTE CommonJs 모듈을 ES6+ 모듈처럼 import해서 사용할 수 있게 해줌.
    "esModuleInterop": true,
    // NOTE jsx 파일의 처리 방식. preserve로 설정하면 번들러가 처리하게 내버려둠.
    "jsx": "preserve",

    // NOTE 아래는 TS 관련 설정
    // NOTE TS를 사용 시, js파일도 타입 검사를 진행함.
    "allowJs": true,
    // NOTE 각 파일을 독립적인 모듈로 처리. TS 사용시 타입 정보가 공유되지 않도록 함.
    "isolatedModules": true,
    // NOTE ts 확장자의 생략 여부. false시 생략해야함.
    "allowImportingTsExtensions": false,
    // NOTE import/export의 타입 전용 구문을 강제함.
    "verbatimModuleSyntax": true,
    // NOTE default export가 없을 경우, 전체 요소를 해당 이름으로 import 받을 수 있음. 실제 코드에 영향을 주지 않는 type 검사에만 사용됨.
    "allowSyntheticDefaultImports": true
  },
  // NOTE 프로젝트에 포함할 패턴 지정
  "include": ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"],
  // NOTE 프로젝트에 제외할 패턴 지정
  "exclude": ["node_modules", "dist"],

  // BACKEND
  "compilerOptions": {
    "paths": {
      // NOTE 각 루트폴더를 @로 지정
      "@/*": ["./*"],
      "@configs/*": ["./src/configs/*"],
      "@controllers/*": ["./src/controllers/*"],
      "@models/*": ["./src/models/*"],
      "@services/*": ["./src/services/*"],
      "@utils/*": ["./src/utils/*"]
    },
    // NOTE ESNext: ECMAScript의 최신 버전을 지정
    "target": "ESNext",
    // NOTE NodeNext: Node의 최신 버전을 지정
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    // NOTE CommonJs 모듈을 ES6+ 모듈처럼 import해서 사용할 수 있게 해줌.
    "esModuleInterop": true,

    // NOTE 아래는 TS 관련 설정
    // NOTE TS를 사용 시, js파일도 타입 검사를 진행함.
    "allowJs": true,
    // NOTE 각 파일을 독립적인 모듈로 처리. TS 사용시 타입 정보가 공유되지 않도록 함.
    "isolatedModules": true,
    // NOTE ts 확장자의 생략 여부. false시 생략해야함.
    "allowImportingTsExtensions": false,
    // NOTE import/export의 타입 전용 구문을 강제함.
    "verbatimModuleSyntax": true,
    // NOTE default export가 없을 경우, 전체 요소를 해당 이름으로 import 받을 수 있음. 실제 코드에 영향을 주지 않는 type 검사에만 사용됨.
    "allowSyntheticDefaultImports": true,
    // NOTE 출력 위치와 주석 처리 여부 설정
    "outDir": "./dist",
    "removeComments": true
  },
  // NOTE 프로젝트에 포함할 패턴 지정
  "include": ["**/*.ts", "**/*.js"],
  // NOTE 프로젝트에 제외할 패턴 지정
  "exclude": ["node_modules", "dist"]
}
